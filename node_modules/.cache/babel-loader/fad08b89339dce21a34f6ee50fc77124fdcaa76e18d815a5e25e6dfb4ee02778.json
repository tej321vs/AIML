{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VENKAT\\\\Downloads\\\\unknown\\\\algoverse\\\\frontend\\\\src\\\\components\\\\MicOptions.jsx\";\n// src/components/MicOptions.jsx\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MicOptions({\n  setVoiceInput,\n  setVoiceOutput,\n  setShowMicOptions\n}) {\n  const handleVoiceInput = () => {\n    setVoiceInput(true);\n    setShowMicOptions(false);\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = 'en-US';\n    recognition.start();\n    recognition.onresult = function (event) {\n      const transcript = event.results[0][0].transcript;\n      const inputBox = document.querySelector('input[type=\"text\"]');\n      if (inputBox) inputBox.value = transcript;\n    };\n    recognition.onerror = function () {\n      alert(\"üé§ Voice input failed. Please try again.\");\n    };\n  };\n  const handleVoiceOutput = () => {\n    setVoiceOutput(true);\n    alert(\"üîä Voice output enabled\");\n    setShowMicOptions(false);\n  };\n  const disableMic = () => {\n    setVoiceInput(false);\n    setVoiceOutput(false);\n    alert(\"‚ùå Mic disabled\");\n    setShowMicOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"micOptions\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceInput,\n      children: \"\\uD83C\\uDF99 Take Voice Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceOutput,\n      children: \"\\uD83D\\uDD0A Read Bot Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: disableMic,\n      children: \"\\u274C Disable Mic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = MicOptions;\nexport default MicOptions;\nvar _c;\n$RefreshReg$(_c, \"MicOptions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MicOptions","setVoiceInput","setVoiceOutput","setShowMicOptions","handleVoiceInput","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","start","onresult","event","transcript","results","inputBox","document","querySelector","value","onerror","alert","handleVoiceOutput","disableMic","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VENKAT/Downloads/unknown/algoverse/frontend/src/components/MicOptions.jsx"],"sourcesContent":["// src/components/MicOptions.jsx\r\nimport React from 'react';\r\n\r\nfunction MicOptions({ setVoiceInput, setVoiceOutput, setShowMicOptions }) {\r\n  const handleVoiceInput = () => {\r\n    setVoiceInput(true);\r\n    setShowMicOptions(false);\r\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    recognition.lang = 'en-US';\r\n    recognition.start();\r\n    recognition.onresult = function (event) {\r\n      const transcript = event.results[0][0].transcript;\r\n      const inputBox = document.querySelector('input[type=\"text\"]');\r\n      if (inputBox) inputBox.value = transcript;\r\n    };\r\n    recognition.onerror = function () {\r\n      alert(\"üé§ Voice input failed. Please try again.\");\r\n    };\r\n  };\r\n\r\n  const handleVoiceOutput = () => {\r\n    setVoiceOutput(true);\r\n    alert(\"üîä Voice output enabled\");\r\n    setShowMicOptions(false);\r\n  };\r\n\r\n  const disableMic = () => {\r\n    setVoiceInput(false);\r\n    setVoiceOutput(false);\r\n    alert(\"‚ùå Mic disabled\");\r\n    setShowMicOptions(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"micOptions\">\r\n      <button onClick={handleVoiceInput}>üéô Take Voice Input</button>\r\n      <button onClick={handleVoiceOutput}>üîä Read Bot Response</button>\r\n      <button onClick={disableMic}>‚ùå Disable Mic</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MicOptions;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC,aAAa;EAAEC,cAAc;EAAEC;AAAkB,CAAC,EAAE;EACxE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,aAAa,CAAC,IAAI,CAAC;IACnBE,iBAAiB,CAAC,KAAK,CAAC;IACxB,MAAME,WAAW,GAAG,KAAKC,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB,EAAE,CAAC;IACtFH,WAAW,CAACI,IAAI,GAAG,OAAO;IAC1BJ,WAAW,CAACK,KAAK,CAAC,CAAC;IACnBL,WAAW,CAACM,QAAQ,GAAG,UAAUC,KAAK,EAAE;MACtC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;MACjD,MAAME,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC;MAC7D,IAAIF,QAAQ,EAAEA,QAAQ,CAACG,KAAK,GAAGL,UAAU;IAC3C,CAAC;IACDR,WAAW,CAACc,OAAO,GAAG,YAAY;MAChCC,KAAK,CAAC,0CAA0C,CAAC;IACnD,CAAC;EACH,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BnB,cAAc,CAAC,IAAI,CAAC;IACpBkB,KAAK,CAAC,yBAAyB,CAAC;IAChCjB,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACvBrB,aAAa,CAAC,KAAK,CAAC;IACpBC,cAAc,CAAC,KAAK,CAAC;IACrBkB,KAAK,CAAC,gBAAgB,CAAC;IACvBjB,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAKwB,EAAE,EAAC,YAAY;IAAAC,QAAA,gBAClBzB,OAAA;MAAQ0B,OAAO,EAAErB,gBAAiB;MAAAoB,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/D9B,OAAA;MAAQ0B,OAAO,EAAEJ,iBAAkB;MAAAG,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjE9B,OAAA;MAAQ0B,OAAO,EAAEH,UAAW;MAAAE,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACC,EAAA,GArCQ9B,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}