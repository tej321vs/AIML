{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VENKAT\\\\Downloads\\\\unknown\\\\algoverse\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport AuthModal from './components/AuthModal';\nimport MicOptions from './components/MicOptions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3000\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [chats, setChats] = useState([]);\n  const [currentChatIndex, setCurrentChatIndex] = useState(-1);\n  const [voiceInput, setVoiceInput] = useState(false);\n  const [voiceOutput, setVoiceOutput] = useState(false);\n  const [status, setStatus] = useState('');\n  const [showMicOptions, setShowMicOptions] = useState(false);\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  useEffect(() => {\n    if (!token) return;\n    fetchChats();\n  }, [token]);\n  const fetchChats = async () => {\n    const res = await fetch(`${API_BASE}/chats`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await res.json();\n    setChats(data);\n    setCurrentChatIndex(data.length - 1);\n  };\n  const handleNewChat = async () => {\n    const res = await fetch(`${API_BASE}/chat/new`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const chat = await res.json();\n    setChats([...chats, chat]);\n    setCurrentChatIndex(chats.length);\n  };\n  const handleRename = async (index, newTitle) => {\n    if (!newTitle) return;\n    const chatId = chats[index]._id;\n    const updated = chats.map((chat, i) => i === index ? {\n      ...chat,\n      title: newTitle\n    } : chat);\n    setChats(updated);\n    await fetch(`${API_BASE}/chat/rename`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        chatId,\n        title: newTitle\n      })\n    });\n  };\n  const handleDelete = async index => {\n    const chatId = chats[index]._id;\n    await fetch(`${API_BASE}/chat/${chatId}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const updated = [...chats];\n    updated.splice(index, 1);\n    setChats(updated);\n    setCurrentChatIndex(updated.length - 1);\n  };\n  const handleSend = async msg => {\n    if (!msg || currentChatIndex === -1 || status === \"Thinking...\") return;\n    const chatId = chats[currentChatIndex]._id;\n    const userMsg = {\n      type: 'user',\n      text: msg\n    };\n    const updatedChats = chats.map((chat, index) => index === currentChatIndex ? {\n      ...chat,\n      messages: [...chat.messages, userMsg]\n    } : chat);\n    setChats(updatedChats);\n    setStatus(\"Thinking...\");\n    try {\n      const res = await fetch(`${API_BASE}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          message: msg,\n          chatId\n        })\n      });\n      const data = await res.json();\n      const botMsg = {\n        type: 'bot',\n        text: data.reply\n      };\n      const updatedWithReply = updatedChats.map((chat, index) => index === currentChatIndex ? {\n        ...chat,\n        messages: [...chat.messages, botMsg]\n      } : chat);\n      setChats(updatedWithReply);\n      if (voiceOutput) speak(data.reply);\n    } catch {\n      const errorMsg = {\n        type: 'bot',\n        text: '❌ Server error.'\n      };\n      const updatedWithError = updatedChats.map((chat, index) => index === currentChatIndex ? {\n        ...chat,\n        messages: [...chat.messages, errorMsg]\n      } : chat);\n      setChats(updatedWithError);\n    }\n    setStatus('');\n  };\n  const speak = text => {\n    const utter = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utter);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!token && /*#__PURE__*/_jsxDEV(AuthModal, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 18\n    }, this), token && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [sidebarVisible && /*#__PURE__*/_jsxDEV(Sidebar, {\n        chats: chats,\n        setCurrentChatIndex: i => status !== \"Thinking...\" && setCurrentChatIndex(i),\n        onNewChat: handleNewChat,\n        onRename: handleRename,\n        onDelete: handleDelete,\n        token: token,\n        hidden: !sidebarVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        chat: chats[currentChatIndex],\n        onSend: handleSend,\n        status: status,\n        showMicOptions: showMicOptions,\n        setShowMicOptions: setShowMicOptions,\n        voiceInput: voiceInput,\n        setVoiceInput: setVoiceInput,\n        voiceOutput: voiceOutput,\n        setVoiceOutput: setVoiceOutput,\n        onToggleSidebar: () => setSidebarVisible(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => window.location.href = '/launcher.html',\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), showMicOptions && /*#__PURE__*/_jsxDEV(MicOptions, {\n        setVoiceInput: setVoiceInput,\n        setVoiceOutput: setVoiceOutput,\n        setShowMicOptions: setShowMicOptions,\n        handleUserPrompt: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qpbxJjVO/CEodA7lUiWxQ3rHQbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Chat","AuthModal","MicOptions","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","App","_s","token","setToken","localStorage","getItem","chats","setChats","currentChatIndex","setCurrentChatIndex","voiceInput","setVoiceInput","voiceOutput","setVoiceOutput","status","setStatus","showMicOptions","setShowMicOptions","sidebarVisible","setSidebarVisible","fetchChats","res","fetch","headers","Authorization","data","json","length","handleNewChat","method","chat","handleRename","index","newTitle","chatId","_id","updated","map","i","title","body","JSON","stringify","handleDelete","splice","handleSend","msg","userMsg","type","text","updatedChats","messages","message","botMsg","reply","updatedWithReply","speak","errorMsg","updatedWithError","utter","SpeechSynthesisUtterance","window","speechSynthesis","logout","removeItem","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNewChat","onRename","onDelete","hidden","onSend","onToggleSidebar","prev","onClick","href","handleUserPrompt","_c","$RefreshReg$"],"sources":["C:/Users/VENKAT/Downloads/unknown/algoverse/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport Chat from './components/Chat';\r\nimport AuthModal from './components/AuthModal';\r\nimport MicOptions from './components/MicOptions';\r\nimport './App.css';\r\n\r\nconst API_BASE = \"http://localhost:3000\";\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [chats, setChats] = useState([]);\r\n  const [currentChatIndex, setCurrentChatIndex] = useState(-1);\r\n  const [voiceInput, setVoiceInput] = useState(false);\r\n  const [voiceOutput, setVoiceOutput] = useState(false);\r\n  const [status, setStatus] = useState('');\r\n  const [showMicOptions, setShowMicOptions] = useState(false);\r\n  const [sidebarVisible, setSidebarVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n    fetchChats();\r\n  }, [token]);\r\n\r\n  const fetchChats = async () => {\r\n    const res = await fetch(`${API_BASE}/chats`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    const data = await res.json();\r\n    setChats(data);\r\n    setCurrentChatIndex(data.length - 1);\r\n  };\r\n\r\n  const handleNewChat = async () => {\r\n    const res = await fetch(`${API_BASE}/chat/new`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    const chat = await res.json();\r\n    setChats([...chats, chat]);\r\n    setCurrentChatIndex(chats.length);\r\n  };\r\n\r\n  const handleRename = async (index, newTitle) => {\r\n    if (!newTitle) return;\r\n    const chatId = chats[index]._id;\r\n    const updated = chats.map((chat, i) =>\r\n      i === index ? { ...chat, title: newTitle } : chat\r\n    );\r\n    setChats(updated);\r\n\r\n    await fetch(`${API_BASE}/chat/rename`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ chatId, title: newTitle })\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (index) => {\r\n    const chatId = chats[index]._id;\r\n    await fetch(`${API_BASE}/chat/${chatId}`, {\r\n      method: 'DELETE',\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    const updated = [...chats];\r\n    updated.splice(index, 1);\r\n    setChats(updated);\r\n    setCurrentChatIndex(updated.length - 1);\r\n  };\r\n\r\n  const handleSend = async (msg) => {\r\n    if (!msg || currentChatIndex === -1 || status === \"Thinking...\") return;\r\n    const chatId = chats[currentChatIndex]._id;\r\n\r\n    const userMsg = { type: 'user', text: msg };\r\n    const updatedChats = chats.map((chat, index) =>\r\n      index === currentChatIndex\r\n        ? { ...chat, messages: [...chat.messages, userMsg] }\r\n        : chat\r\n    );\r\n    setChats(updatedChats);\r\n    setStatus(\"Thinking...\");\r\n\r\n    try {\r\n      const res = await fetch(`${API_BASE}/chat`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ message: msg, chatId })\r\n      });\r\n      const data = await res.json();\r\n      const botMsg = { type: 'bot', text: data.reply };\r\n\r\n      const updatedWithReply = updatedChats.map((chat, index) =>\r\n        index === currentChatIndex\r\n          ? { ...chat, messages: [...chat.messages, botMsg] }\r\n          : chat\r\n      );\r\n      setChats(updatedWithReply);\r\n\r\n      if (voiceOutput) speak(data.reply);\r\n    } catch {\r\n      const errorMsg = { type: 'bot', text: '❌ Server error.' };\r\n      const updatedWithError = updatedChats.map((chat, index) =>\r\n        index === currentChatIndex\r\n          ? { ...chat, messages: [...chat.messages, errorMsg] }\r\n          : chat\r\n      );\r\n      setChats(updatedWithError);\r\n    }\r\n\r\n    setStatus('');\r\n  };\r\n\r\n  const speak = (text) => {\r\n    const utter = new SpeechSynthesisUtterance(text);\r\n    window.speechSynthesis.speak(utter);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {!token && <AuthModal setToken={setToken} />}\r\n      {token && (\r\n        <>\r\n          {sidebarVisible && (\r\n            <Sidebar\r\n              chats={chats}\r\n              setCurrentChatIndex={(i) => status !== \"Thinking...\" && setCurrentChatIndex(i)}\r\n              onNewChat={handleNewChat}\r\n              onRename={handleRename}\r\n              onDelete={handleDelete}\r\n              token={token}\r\n              hidden={!sidebarVisible}\r\n            />\r\n          )}\r\n          <Chat\r\n            chat={chats[currentChatIndex]}\r\n            onSend={handleSend}\r\n            status={status}\r\n            showMicOptions={showMicOptions}\r\n            setShowMicOptions={setShowMicOptions}\r\n            voiceInput={voiceInput}\r\n            setVoiceInput={setVoiceInput}\r\n            voiceOutput={voiceOutput}\r\n            setVoiceOutput={setVoiceOutput}\r\n            onToggleSidebar={() => setSidebarVisible(prev => !prev)}\r\n          />\r\n          <button className=\"logout-btn\" onClick={logout}>Logout</button>\r\n          <button className=\"back-btn\" onClick={() => window.location.href = '/launcher.html'}>← Back</button>\r\n          {showMicOptions && (\r\n            <MicOptions\r\n              setVoiceInput={setVoiceInput}\r\n              setVoiceOutput={setVoiceOutput}\r\n              setShowMicOptions={setShowMicOptions}\r\n              handleUserPrompt={handleSend}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}