{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VENKAT\\\\Downloads\\\\unknown\\\\algoverse\\\\frontend\\\\src\\\\components\\\\MicOptions.jsx\";\n// src/components/MicOptions.jsx\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet recognition;\nfunction MicOptions({\n  setVoiceInput,\n  setVoiceOutput,\n  setShowMicOptions,\n  handleUserPrompt\n}) {\n  const handleVoiceInput = () => {\n    if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\n      alert(\"‚ùå Voice input not supported in this browser.\");\n      return;\n    }\n    setVoiceInput(true);\n    setShowMicOptions(false);\n    recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = 'en-US';\n    recognition.start();\n    recognition.onresult = function (event) {\n      const transcript = event.results[0][0].transcript;\n\n      // Set transcript to the input box (React controlled)\n      const inputBox = document.querySelector('input[type=\"text\"]');\n      if (inputBox) {\n        inputBox.value = transcript;\n\n        // Call the function to handle prompt submission\n        handleUserPrompt(transcript); // üëà auto-submit after speaking\n      }\n    };\n    recognition.onerror = function (event) {\n      alert(\"üé§ Voice input error: \" + event.error);\n    };\n  };\n  const handleVoiceOutput = () => {\n    setVoiceOutput(true);\n    alert(\"üîä Voice output enabled\");\n    setShowMicOptions(false);\n  };\n  const disableMic = () => {\n    setVoiceInput(false);\n    setVoiceOutput(false);\n    setShowMicOptions(false);\n\n    // Stop voice input\n    try {\n      if (recognition) recognition.abort();\n    } catch (e) {}\n\n    // Stop voice output\n    try {\n      window.speechSynthesis.cancel();\n    } catch (e) {}\n    alert(\"‚ùå Mic disabled\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"micOptions\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceInput,\n      children: \"\\uD83C\\uDF99 Take Voice Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceOutput,\n      children: \"\\uD83D\\uDD0A Read Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: disableMic,\n      children: \"\\u274C Disable Mic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = MicOptions;\nexport default MicOptions;\nvar _c;\n$RefreshReg$(_c, \"MicOptions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","recognition","MicOptions","setVoiceInput","setVoiceOutput","setShowMicOptions","handleUserPrompt","handleVoiceInput","window","alert","SpeechRecognition","webkitSpeechRecognition","lang","start","onresult","event","transcript","results","inputBox","document","querySelector","value","onerror","error","handleVoiceOutput","disableMic","abort","e","speechSynthesis","cancel","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VENKAT/Downloads/unknown/algoverse/frontend/src/components/MicOptions.jsx"],"sourcesContent":["// src/components/MicOptions.jsx\r\nimport React from 'react';\r\n\r\nlet recognition;\r\n\r\nfunction MicOptions({ setVoiceInput, setVoiceOutput, setShowMicOptions, handleUserPrompt }) {\r\n  const handleVoiceInput = () => {\r\n    if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\r\n      alert(\"‚ùå Voice input not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    setVoiceInput(true);\r\n    setShowMicOptions(false);\r\n\r\n    recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    recognition.lang = 'en-US';\r\n    recognition.start();\r\n\r\n    recognition.onresult = function (event) {\r\n      const transcript = event.results[0][0].transcript;\r\n      \r\n      // Set transcript to the input box (React controlled)\r\n      const inputBox = document.querySelector('input[type=\"text\"]');\r\n      if (inputBox) {\r\n        inputBox.value = transcript;\r\n\r\n        // Call the function to handle prompt submission\r\n        handleUserPrompt(transcript);  // üëà auto-submit after speaking\r\n      }\r\n    };\r\n\r\n    recognition.onerror = function (event) {\r\n      alert(\"üé§ Voice input error: \" + event.error);\r\n    };\r\n  };\r\n\r\n  const handleVoiceOutput = () => {\r\n    setVoiceOutput(true);\r\n    alert(\"üîä Voice output enabled\");\r\n    setShowMicOptions(false);\r\n  };\r\n\r\n  const disableMic = () => {\r\n    setVoiceInput(false);\r\n    setVoiceOutput(false);\r\n    setShowMicOptions(false);\r\n\r\n    // Stop voice input\r\n    try {\r\n      if (recognition) recognition.abort();\r\n    } catch (e) {}\r\n\r\n    // Stop voice output\r\n    try {\r\n      window.speechSynthesis.cancel();\r\n    } catch (e) {}\r\n\r\n    alert(\"‚ùå Mic disabled\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"micOptions\">\r\n      <button onClick={handleVoiceInput}>üéô Take Voice Input</button>\r\n      <button onClick={handleVoiceOutput}>üîä Read Response</button>\r\n      <button onClick={disableMic}>‚ùå Disable Mic</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MicOptions;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,IAAIC,WAAW;AAEf,SAASC,UAAUA,CAAC;EAAEC,aAAa;EAAEC,cAAc;EAAEC,iBAAiB;EAAEC;AAAiB,CAAC,EAAE;EAC1F,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,EAAE,yBAAyB,IAAIC,MAAM,IAAI,mBAAmB,IAAIA,MAAM,CAAC,EAAE;MAC3EC,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IAEAN,aAAa,CAAC,IAAI,CAAC;IACnBE,iBAAiB,CAAC,KAAK,CAAC;IAExBJ,WAAW,GAAG,KAAKO,MAAM,CAACE,iBAAiB,IAAIF,MAAM,CAACG,uBAAuB,EAAE,CAAC;IAChFV,WAAW,CAACW,IAAI,GAAG,OAAO;IAC1BX,WAAW,CAACY,KAAK,CAAC,CAAC;IAEnBZ,WAAW,CAACa,QAAQ,GAAG,UAAUC,KAAK,EAAE;MACtC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;;MAEjD;MACA,MAAME,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC;MAC7D,IAAIF,QAAQ,EAAE;QACZA,QAAQ,CAACG,KAAK,GAAGL,UAAU;;QAE3B;QACAV,gBAAgB,CAACU,UAAU,CAAC,CAAC,CAAE;MACjC;IACF,CAAC;IAEDf,WAAW,CAACqB,OAAO,GAAG,UAAUP,KAAK,EAAE;MACrCN,KAAK,CAAC,wBAAwB,GAAGM,KAAK,CAACQ,KAAK,CAAC;IAC/C,CAAC;EACH,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BpB,cAAc,CAAC,IAAI,CAAC;IACpBK,KAAK,CAAC,yBAAyB,CAAC;IAChCJ,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMoB,UAAU,GAAGA,CAAA,KAAM;IACvBtB,aAAa,CAAC,KAAK,CAAC;IACpBC,cAAc,CAAC,KAAK,CAAC;IACrBC,iBAAiB,CAAC,KAAK,CAAC;;IAExB;IACA,IAAI;MACF,IAAIJ,WAAW,EAAEA,WAAW,CAACyB,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOC,CAAC,EAAE,CAAC;;IAEb;IACA,IAAI;MACFnB,MAAM,CAACoB,eAAe,CAACC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOF,CAAC,EAAE,CAAC;IAEblB,KAAK,CAAC,gBAAgB,CAAC;EACzB,CAAC;EAED,oBACET,OAAA;IAAK8B,EAAE,EAAC,YAAY;IAAAC,QAAA,gBAClB/B,OAAA;MAAQgC,OAAO,EAAEzB,gBAAiB;MAAAwB,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DpC,OAAA;MAAQgC,OAAO,EAAER,iBAAkB;MAAAO,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DpC,OAAA;MAAQgC,OAAO,EAAEP,UAAW;MAAAM,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACC,EAAA,GA/DQnC,UAAU;AAiEnB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}